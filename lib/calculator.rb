#
# Autogenerated by Thrift Compiler (0.11.0)
#
# DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
#

require 'thrift'
require 'services_types'

module AislerServices
  module Calculator
    class Client
      include ::Thrift::Client

      def add(a, b)
        send_add(a, b)
        return recv_add()
      end

      def send_add(a, b)
        send_message('add', Add_args, :a => a, :b => b)
      end

      def recv_add()
        result = receive_message(Add_result)
        return result.success unless result.success.nil?
        raise ::Thrift::ApplicationException.new(::Thrift::ApplicationException::MISSING_RESULT, 'add failed: unknown result')
      end

      def ping()
        send_ping()
        return recv_ping()
      end

      def send_ping()
        send_message('ping', Ping_args)
      end

      def recv_ping()
        result = receive_message(Ping_result)
        return result.success unless result.success.nil?
        raise ::Thrift::ApplicationException.new(::Thrift::ApplicationException::MISSING_RESULT, 'ping failed: unknown result')
      end

    end

    class Processor
      include ::Thrift::Processor

      def process_add(seqid, iprot, oprot)
        args = read_args(iprot, Add_args)
        result = Add_result.new()
        result.success = @handler.add(args.a, args.b)
        write_result(result, oprot, 'add', seqid)
      end

      def process_ping(seqid, iprot, oprot)
        args = read_args(iprot, Ping_args)
        result = Ping_result.new()
        result.success = @handler.ping()
        write_result(result, oprot, 'ping', seqid)
      end

    end

    # HELPER FUNCTIONS AND STRUCTURES

    class Add_args
      include ::Thrift::Struct, ::Thrift::Struct_Union
      A = 1
      B = 2

      FIELDS = {
        A => {:type => ::Thrift::Types::I16, :name => 'a'},
        B => {:type => ::Thrift::Types::I16, :name => 'b'}
      }

      def struct_fields; FIELDS; end

      def validate
      end

      ::Thrift::Struct.generate_accessors self
    end

    class Add_result
      include ::Thrift::Struct, ::Thrift::Struct_Union
      SUCCESS = 0

      FIELDS = {
        SUCCESS => {:type => ::Thrift::Types::I16, :name => 'success'}
      }

      def struct_fields; FIELDS; end

      def validate
      end

      ::Thrift::Struct.generate_accessors self
    end

    class Ping_args
      include ::Thrift::Struct, ::Thrift::Struct_Union

      FIELDS = {

      }

      def struct_fields; FIELDS; end

      def validate
      end

      ::Thrift::Struct.generate_accessors self
    end

    class Ping_result
      include ::Thrift::Struct, ::Thrift::Struct_Union
      SUCCESS = 0

      FIELDS = {
        SUCCESS => {:type => ::Thrift::Types::STRING, :name => 'success'}
      }

      def struct_fields; FIELDS; end

      def validate
      end

      ::Thrift::Struct.generate_accessors self
    end

  end

end
